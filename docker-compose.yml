version: "3.7"

services:
  # Postgres
  fido_service.db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - fido_service_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME:?err}
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
    container_name: fido_service-db

  # Application
  fido_service.api:
    build:
      context: .
      dockerfile: Dockerfile
    image: fido_service.api:latest
    command: ./scripts/run-server.sh
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - fido_service.db
      - redis
    container_name: fido_service-api
  # # Celery
  # fido_service.celery:
  #   build: .
  #   image: fido_service.celery:latest
  #   command: ./scripts/run-celery.sh
  #   volumes:
  #     - .:/app
  #   environment:
  #     - CELERY_BROKER=${CELERY_BROKER:?err}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:?err}
  #   depends_on:
  #     - fido_service.api
  #     - redis
  #   container_name: fido_service-celery

  # # Flower
  # fido_service.flower:
  #   build: .
  #   image: fido_service.flower:latest
  #   ports:
  #     - '5555:5555'
  #   command: ./scripts/run-flower.sh
  #   environment:
  #     - CELERY_BROKER=${CELERY_BROKER:?err}
  #     - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:?err}
  #   depends_on:
  #     - fido_service.api
  #     - redis
  #     - fido_service.celery
  #   container_name: fido_service-flower

volumes:
  fido_service_data:
